@font-face {
  font-family: 'speciesicons';
  src:
    url('./fonts/speciesicons.ttf?5xwzqk') format('truetype'),
    url('./fonts/speciesicons.woff?5xwzqk') format('woff'),
    url('./fonts/speciesicons.svg?5xwzqk#speciesicons') format('svg');
  font-weight: normal;
  font-style: normal;
  font-display: block;
}

.s3_obstruction {
  --color-s3: var(--color-obstruction);
}

.euler_diagram {
  text-align: center;
  display: flex;
  flex-direction: column;
  font-size: 0.95rem
}

.eulersvg, .venn {
  max-height: 20rem;
  isolation: isolate;
}

.venn.multi {
  max-height: unset;
}

.eulersvg > path, .venn > circle {
  mix-blend-mode: multiply;
}

.eulersvg > text {
  font-family: 'squirrelicons' !important;
  font-style: initial;
}

.eulersvg > text.obstruction {
  fill: var(--color-obstruction);
}

@media (prefers-color-scheme: dark) {
  .eulersvg > path, .venn > circle {
    mix-blend-mode: screen;
  }
}

.euler.clip {
  stroke: none;
  fill: white;
}

.euler.mask {
  stroke: black;
  fill: none;
}

.euler_toggles, .the_sets {
  display: flex;
}

.euler_toggles > div, .the_sets > div {
  flex: 1;
}

.euler_toggles > div > button {
  margin: 0 0.3em 0.3em 0;
}

.the_sets {
  margin: 1rem 0;
}

.euler_yay {
  fill: url("#pattern_euler_yay");
}

#container_euler_powerset > svg > path {
  fill: none;
}

#powerset_result {
  text-align: left;
  padding-left: 2rem;
  overflow-x: auto;
}

#first_venn > text {
  font-family: 'speciesicons' !important;
  font-size: 0.7rem;
  font-style: initial;
  isolation: isolate;
  cursor: initial;
}

.first_venn_region {
  stroke: none;
  fill: rgba(0, 0, 0, 0);
}

.venn_frame {
  stroke: var(--color-bg2);
  fill: none;
}

.venn_flow {
  stroke: var(--color-bg2);
  stroke-width: 2;
  fill: var(--color-bg2);
}

.venn_op_container {
  font-size: 2rem;
  display: table;
  width: 100%;
  height: 100%;
  text-align: center;
}

.venn_op_container > * {
  display: table-cell;
  vertical-align: middle;
}

#duck_region {
  cursor: pointer;
}

@media (prefers-reduced-motion) {
  #duck_region {
    cursor: initial;
  }
}

#duck_container {
  z-index: 2;
  width: 0px;
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

#duck_container.active_duck {
  animation: duck_zoom 8s ease 0s 1 normal forwards, duck_rotate 0.91s ease 0s infinite alternate forwards;
}

@keyframes duck_zoom {
  0% {
    width: 0px;
  }

  50% {
    width: 100vw;
  }

  100% {
    width: 0px;
  }
}

@keyframes duck_rotate {
  0% {
    transform: translate(-50%, -50%) rotate(-20deg);
  }

  100% {
    transform: translate(-50%, -50%) rotate(20deg);
  }
}
